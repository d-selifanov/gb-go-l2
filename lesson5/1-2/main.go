/*
1. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç ùëõ –ø–æ—Ç–æ–∫–æ–≤ –∏ –¥–æ–∂–∏–¥–∞–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏—Ö –≤—Å–µ—Ö
2. –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –º—å—é—Ç–µ–∫—Å–∞ —Å –ø–æ–º–æ—â—å—é defer
*/

package main

import (
	"fmt"
	"sync"
)

const n = 1000

func main() {
	var (
		counter int
		mutex   sync.Mutex
		wg      = sync.WaitGroup{}
	)
	wg.Add(n)
	for i := 0; i < n; i += 1 {
		go func(i int, mutex *sync.Mutex) {
			mutex.Lock()
			defer mutex.Unlock()
			counter += 1
			fmt.Println("Goroutine:", i+1)
			wg.Done()
		}(i, &mutex)
	}
	wg.Wait()
	fmt.Println("Total completed:", counter)
}
